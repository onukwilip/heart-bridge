on:
  push:
    branches:
      - main
  release:
    types: published
  workflow_dispatch: {}

jobs:
  deploy-to-docker:
    runs-on: ubuntu-latest
    name: Deploy application to Docker Hub container registry
    env:
      SHA: ${{github.sha}}
      INFISICAL_MACHINE_CLIENT_ID: ${{secrets.INFISICAL_MACHINE_CLIENT_ID}}
      INFISICAL_MACHINE_CLIENT_SECRET: ${{secrets.INFISICAL_MACHINE_CLIENT_SECRET}}
      INFISICAL_PROJECT_ID: ${{secrets.INFISICAL_PROJECT_ID}}
    steps:
      - name: Checkout branch from the repository
        uses: actions/checkout@v2

      - name: Authenticate and Docker Hub
        env:
          D_USER: ${{secrets.D_USER}}
          D_PWORD: ${{secrets.D_PWORD}}
        run: docker login -u $D_USER -p $D_PWORD

      - name: Build Docker image
        run: docker build --build-arg INFISICAL_MACHINE_CLIENT_ID_ARG=$INFISICAL_MACHINE_CLIENT_ID --build-arg INFISICAL_MACHINE_CLIENT_SECRET_ARG=$INFISICAL_MACHINE_CLIENT_SECRET --build-arg PROJECT_ID_ARG=$INFISICAL_PROJECT_ID -t prince2006/heart-bridge:$SHA -t prince2006/heart-bridge:latest .

      - name: Push Docker image to Docker Hub
        run: |
          docker push prince2006/heart-bridge:$SHA
          docker push prince2006/heart-bridge:latest

  setup-infrastructure:
    runs-on: ubuntu-latest
    name: Set up infrastructure
    needs: deploy-to-docker
    env:
      SHA: ${{github.sha}}
      PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      ZONE: us-central1-c
      INSTANCE_GROUP_NAME: heart-bridge-instance-group-manager
    steps:
      - name: Checkout branch from the repository
        uses: actions/checkout@v2

      - name: Authenticate for GCP
        id: gcp-auth
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0

      - name: Check if instance group exists
        id: check_instance_group
        run: |
          if gcloud compute instance-groups managed describe "$INSTANCE_GROUP_NAME" --project "$PROJECT_ID" --zone "$ZONE" &> /dev/null; then
              echo "Instance group exists."
              echo "INSTANCES_EXISTS=1" >> $GITHUB_ENV
          else
              echo "Instance group does not exist."
              echo "INSTANCES_EXISTS=0" >> $GITHUB_ENV
          fi

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.3

      - name: Initialize Terraform
        run: |
          cd terraform 
          terraform init

      - name: Update Terraform state with existing resources on the Google Cloud project
        continue-on-error: true
        run: |
          cd terraform
          terraform import google_compute_firewall.react-server projects/impactful-shard-429011-e7/global/firewalls/react-server || true
          terraform import google_compute_instance_group_manager.heart-bridge-instance-group-manager projects/impactful-shard-429011-e7/zones/us-central1-c/instanceGroupManagers/heart-bridge-instance-group-manager || true
          terraform import google_compute_instance_template.heart-bridge-instance projects/impactful-shard-429011-e7/global/instanceTemplates/heart-bridge-instance || true
          terraform import google_compute_backend_service.heart-bridge-backend projects/impactful-shard-429011-e7/global/backendServices/heart-bridge-backend || true
          terraform import google_compute_global_forwarding_rule.heart-bridge-forwarding-rule projects/impactful-shard-429011-e7/global/forwardingRules/heart-bridge-forwarding-rule || true
          terraform import google_compute_health_check.heart-bridge-health-check projects/impactful-shard-429011-e7/global/healthChecks/heart-bridge-health-check || true
          terraform import google_compute_autoscaler.heart-bridge-autoscaler projects/impactful-shard-429011-e7/zones/$ZONE/autoscalers/heart-bridge-autoscaler || true
          terraform import google_compute_url_map.heart-bridge-url-map projects/impactful-shard-429011-e7/global/urlMaps/heart-bridge-url-map || true
          terraform import google_compute_target_http_proxy.heart-bridge-http-proxy projects/impactful-shard-429011-e7/global/targetHttpProxies/heart-bridge-http-proxy || true

      - name: Set up the infrastructure on Google Cloud using Terraform
        run: |
          cd terraform
          terraform apply --auto-approve

      - name: If instance group manager already exists, run the command to restart the instances
        if: env.INSTANCES_EXISTS == 1
        run: |
          echo "Restarting instances in the managed instance group..."
          gcloud beta compute instance-groups managed rolling-action start-update heart-bridge-instance-group-manager \
           --project=$PROJECT_ID \
           --zone=$ZONE \
           --type=proactive \
           --max-unavailable=1 \
           --min-ready=0 \
           --minimal-action=restart \
           --replacement-method=substitute \
           --version=template=https://www.googleapis.com/compute/beta/projects/impactful-shard-429011-e7/global/instanceTemplates/heart-bridge-instance,name=0-$SHA
          echo "Instances in the managed instance group are restarting to pull the latest Docker image."
